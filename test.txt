  this is simple test.
  In my initial overview, I demonstrated creating a branch, making a couple commits to that branch, and then merging them back into master. In that scenario, there were no changes in my local master (and since it was contrived, I knew there were no changes in the remote origin/master), so the merge was really just a fast-forward. In the real world, my workflow would be slightly different, as I would have to account for other people making changes to our shared repository (my origin remote).
  Before I merge my changes into master, I want to make sure my master branch is in synch with the central repository on github (which I refer to using the remote ¡°origin¡±). We can see in the screenshot that my master branch refers to the same commit as origin/master, but that¡¯s because I haven¡¯t communicated with origin in a long time. All of my previous operations were done locally. In order to get the latest state from the remote repository, I need to perform a fetch.
